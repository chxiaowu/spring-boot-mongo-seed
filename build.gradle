buildscript {
	ext {
		springBootVersion = '1.3.5.RELEASE'
	}
	repositories {
		mavenLocal()
	    jcenter()
	    mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot' 
apply plugin: 'war'


war {
	baseName = 'cx'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
    jcenter()
    mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile (
		'org.springframework.boot:spring-boot-starter-jersey',
		'org.springframework.boot:spring-boot-starter-security',
		'org.springframework.boot:spring-boot-starter-data-mongodb',
		'org.springframework.boot:spring-boot-starter-redis',
		'org.springframework.boot:spring-boot-starter-web',
		'org.springframework.boot:spring-boot-devtools'
	)

	// database
	compile (
		// support mongo 3.0
		'org.mongodb:mongo-java-driver:3.0.4'
	)

	// utils
	compile (
		// support getter and setter for models
		'org.projectlombok:lombok:1.16.6',
		// jwt
		'io.jsonwebtoken:jjwt:0.6.0',
		// httpclient
		'org.apache.httpcomponents:httpclient',
		// file upload
		'org.glassfish.jersey.media:jersey-media-multipart:2.21',
		'com.qiniu:qiniu-java-sdk:7.0.+',
		'commons-io:commons-io:2.4',
		// java html parser
		'org.jsoup:jsoup:1.9.2'
	)
	
	// local libs
	compile fileTree(dir: 'libs', include: '*.jar')
	
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testCompile 'org.springframework.boot:spring-boot-starter-test'
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
